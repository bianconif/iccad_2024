#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.show-args-dialog = {loc('box_and_script_plots.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'xz4CwE5FM1RN89oTJ9oYtueYKP8gT3S1',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               1,
                               {'all_tree_states': {'All Classes': {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/classification/accuracy_estimation.py'),
                      'AccuracyEstimator|0|')]},
        'By Module': {'expanded-nodes': [None],
                      'selected-nodes': [],
                      'top-node': None},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/base_classes.py'): {'expanded-nodes': [[('class def',
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/base_classes.py'),
        'Image')],
        [('class def',
          loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/base_classes.py'),
          'ImagePreprocessorS')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/base_classes.py'),
                      'Image')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/digital_disc.py'): {'expanded-nodes': [[('function def',
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/digital_disc.py'),
        'digital_disc')]],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/digital_disc.py'),
                             'digital_disc')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/digital_disc.py'),
                      'digital_disc')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/generic_functions.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/generic_functions.py'),
                             'get_folders')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/generic_functions.py'),
                      'cast_image_type')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/image_operations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/image_operations.py'),
                      'crop_to_central_square')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/rgb2gray.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/rgb2gray.py'),
                      'rgb2gray')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/square_lattice.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/basics/square_lattice.py'),
                      'square_lattice')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/classification/classifiers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/classification/classifiers.py'),
                      'ClassificationTree')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/cnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/cnn.py'),
                      'DenseNet121')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/colour_descriptors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/colour_descriptors.py'),
                             'FullHist')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/colour_descriptors.py'),
                      'FullHist')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/hep_gs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/hep_gs.py'),
                      'HEPGS')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/base_classes.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/base_classes.py'),
                             'ColourPreprocessor')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/base_classes.py'),
                      'ColourPreprocessor')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/colour_augmentation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/colour_augmentation.py'),
                      'PCAColourAugmenter')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/contrast_and_gamma.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/colour/contrast_and_gamma.py'),
                      'Gamma')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/noise.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/noise.py'),
                      'Gaussian')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation.py'),
                             'Watershed')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation.py'),
                      'CNNgs')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/cnn.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/cnn.py'),
                             'CNN')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/cnn.py'),
                      'CNN')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/deep_learning.py'): {'expanded-nodes': [[('class def',
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/deep_learning.py'),
        'TrainableCNN')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/deep_learning.py'),
                      'CNN')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand-designed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand-designed.py'),
                      'Felzenszwalb')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'): {'expanded-nodes': [[('class def',
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'),
        'Felzenszwalb')],
        [('class def',
          loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'),
          'ImageSegmenter')]],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'),
                             'Felzenszwalb|0|._segment'),
                            ('function def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'),
                             'Felzenszwalb|0|._segment')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/segmentation/hand_designed.py'),
                      'Felzenszwalb')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/crop_and_split.py'): {'expanded-nodes': [[('class def',
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/crop_and_split.py'),
        'Resize')]],
        'selected-nodes': [[('class def',
                             loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/crop_and_split.py'),
                             'Resize')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/crop_and_split.py'),
                      'CentralCrop')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/filtering.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/filtering.py'),
                      'Filter')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/filters.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/filters.py'),
                      'Gaussian')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/flip_and_rotate.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/space/flip_and_rotate.py'),
                      'FlipLr')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/thresholding.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/preprocessing/thresholding.py'),
                      'Thresholding')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/texture/filtering.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/texture/filtering.py'),
                      'DCF')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/texture/hep/greyscale.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/texture/hep/greyscale.py'),
                      'HEPGS')]},
        loc('../../../../../../Dev/Python/cenotaph/cenotaph/third_parties/doc_inherit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/cenotaph/cenotaph/third_parties/doc_inherit.py'),
                      'DocInherit')]},
        loc('../../../../../../Dev/Python/cenotaph/tests/test_colour_descriptors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Dev/Python/cenotaph/tests/test_colour_descriptors.py'),
                             'testPercentiles')]],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/cenotaph/tests/test_colour_descriptors.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/metrics.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/metrics.py'),
                             'get_iou')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/metrics.py'),
                      'binary_dice')]},
        loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/predict.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/predict.py'),
                      'concat_lenends')]},
        loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/forks/image-segmentation-keras/keras_segmentation/train.py'),
                      'CheckpointsCallback')]},
        loc('../../../../../../Dev/Python/lung_ss_git/lung_ss.wpr'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/radiomics_pg/basics.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/radiomics_pg/basics.py'),
                      'Calculator')]},
        loc('../../../../../../Dev/Python/radiomics_pg/features/shape/lbt.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/radiomics_pg/features/shape/lbt.py'),
                             'lbt_index')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/features/shape/lbt.py'),
                      'lbt_index')]},
        loc('../../../../../../Dev/Python/radiomics_pg/features/shape/mask.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/radiomics_pg/features/shape/mask.py'),
                             'compactness_1')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/features/shape/mask.py'),
                      'area_density')]},
        loc('../../../../../../Dev/Python/radiomics_pg/features/shape/other.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/radiomics_pg/features/shape/other.py'),
                             'centre_of_mass_shift')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/features/shape/other.py'),
                      'centre_of_mass_shift')]},
        loc('../../../../../../Dev/Python/radiomics_pg/tests/_test_input.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/radiomics_pg/tests/_test_input.py'),
                      'axs')]},
        loc('../../../../../../Dev/Python/radiomics_pg/tests/_test_roi.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/radiomics_pg/tests/_test_roi.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/dicom.py'): {'expanded-nodes': [[('function def',
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/dicom.py'),
        'get_attribute_value')]],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/radiomics_pg/utilities/dicom.py'),
                             'get_attribute_value')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/utilities/dicom.py'),
                      'get_attribute_value')]},
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/geometry.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/utilities/geometry.py'),
                      'axes_inertia_equivalent_ellipsoid')]},
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/misc.py'): {'expanded-nodes': [[('class def',
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/misc.py'),
        'Roi')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/radiomics_pg/utilities/misc.py'),
                      'Roi')]},
        loc('../../../../../../Dev/Python/radiomics_pg/utilities/nii.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/radiomics_pg/utilities/nii.py'),
                      'read')]},
        loc('../../../../../../Dev/Python/seaport/out/parameter-tuning/Felzenszwalb.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/parameter-tuning/FloodFill.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/Felzenszwalb.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/LinkNet_ResNet34--fov-224x224--full-trained.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/MorphACWE.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/Unet_MobileNet--fov-224x224--fine-tuned.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/Unet_MobileNet--fov-224x224--full-trained.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/Unet_ResNet34--fov-224x224--full-trained.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/Watershed.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/optimal-parameters.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/out/results/tuple.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/create_false_greyscale.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/create_false_greyscale.py'),
                      'base_destination')]},
        loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/data_augmentation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/data_augmentation.py'),
                      'ann')]},
        loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/extract_images_from_dicom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/extract_images_from_dicom.py'),
                      'areas')]},
        loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/split_data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/data_preparation/split_data.py'),
                      'allocable_annotation')]},
        loc('../../../../../../Dev/Python/seaport/scripts/paper/data_augmentation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/paper/data_augmentation.py'),
                      'blurrer')]},
        loc('../../../../../../Dev/Python/seaport/scripts/paper/plot_train_histories.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/seaport/scripts/paper/plot_train_histories.py'),
                      'plot_history')]},
        loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables.py'),
                      'df')]},
        loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables_dl.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables_dl.py'),
                      'df_deep_learning')]},
        loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables_hd.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/paper/results_tables_hd.py'),
                      'df')]},
        loc('../../../../../../Dev/Python/seaport/scripts/parameter_tuning.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/parameter_tuning.py'),
                      'amended_combs')]},
        loc('../../../../../../Dev/Python/seaport/scripts/train_cnn.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Dev/Python/seaport/scripts/train_cnn.py'),
                             'validation_annotations')]],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/scripts/train_cnn.py'),
                      'cache_trained_models')]},
        loc('../../../../../../Dev/Python/seaport/src/experiments.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/src/experiments.py'),
                      'evaluation_maps_folder')]},
        loc('../../../../../../Dev/Python/seaport/src/functions.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/seaport/src/functions.py'),
                             'segment')]],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/seaport/src/functions.py'),
                      'get_similarity_measures_bw')]},
        loc('../../../../../../Dev/Python/seaport/src/utilities.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/seaport/src/utilities.py'),
                      'binary_mask')]},
        loc('../../../../../../Dev/Python/seaport/test/keras_segmentation_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/keras_segmentation_test.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/keras_segmentation_train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/keras_segmentation_train.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_cnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_cnn.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_functions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_functions.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_inheritance.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/seaport/test/test_inheritance.py'),
                      'A')]},
        loc('../../../../../../Dev/Python/seaport/test/test_keras_segmentation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_keras_segmentation.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_morph_gac.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_morph_gac.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_random_walker.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_random_walker.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_segmenters.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Dev/Python/seaport/test/test_segmenters.py'),
                             'gtimg')]],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_segmenters.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/seaport/test/test_thresholding.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/seaport/test/test_thresholding.py'),
                      'destination')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/_tests/_test_conversion_SPIE_AAPM.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/_tests/_test_conversion_SPIE_AAPM.py'),
                      'dump_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/box_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/box_plots.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/experiments.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/experiments.py'),
                      'bh_critical_p')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/functions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/functions.py'),
                      'compute_features')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/generics.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/generics.py'),
                             'feature_lut')]],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/generics.py'),
                      'conventional')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/old/experiments.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/old/experiments.py'),
                      'bh_critical_p')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/SSR-1-features.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/comparison-table.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/comparison-table.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/dump/LUNGx-features-and-metadata.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/dump/SSR-1-features-and-metadata.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/features/LUNGx.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/features/SSR-1.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-LUNGx.tex'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-LUNGx.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-SPN-01.tex'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-SPN-01.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-SSR-1.tex'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/comparison-table-SSR-1.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/raw-results-LUNGx'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/raw-results-SPN-01'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/results/raw-results-SSR-1'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/output/tests/stl/CO050244.stl'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_LUNGx.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_LUNGx.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_SPIE_AAPM_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_SPIE_AAPM_1.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_SSR_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_rois_SSR_1.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_study_date_LUNGx.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_extract_study_date_LUNGx.py'),
                      'age')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_generate_sample_slices_from_ROIs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_generate_sample_slices_from_ROIs.py'),
                      'case')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_population_age_and_gender.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/_population_age_and_gender.py'),
                      'age')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/characteristics_patient_series.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/characteristics_patient_series.py'),
                      'dataset_key')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/classification.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/classification.py'),
                      'base_features')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/compute_features.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/compute_features.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/compute_features_and_get_metadata.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/compute_features_and_get_metadata.py'),
                      'anonymous_ids')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/dump_features.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/dump_features.py'),
                      'anonymous_IDs')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/export_stl.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/export_stl.py'),
                      'destination_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_coordinates_SPIE_AAPM_dataset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_coordinates_SPIE_AAPM_dataset.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_rois.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_rois.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_z_SPIE_AAPM_dataset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/extract_z_SPIE_AAPM_dataset.py'),
                      'base_folder')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/univariate_analysis.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/univariate_analysis.py'),
                      'bh_critical_p')]},
        loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/zingg_diagrams.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/shape_analysis_lung_nodules_ct/scripts/zingg_diagrams.py'),
                      'a')]},
        loc('../../../../../../Dev/Python/tanaka/src/legends.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/tanaka/src/legends.py'),
                      'HandlerPatchImage')]},
        loc('../../../../../../Dev/Python/tanaka/src/titles.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/tanaka/src/titles.py'),
                      'set_title_and_subtitle')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/abc.py'),
                      'ABC')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/random.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/WingIDE-7-2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/shutil.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/shutil.py'),
                      'chown')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/matplotlib/image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/pandas/core/indexing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/pandas/core/indexing.py'),
                      'check_bool_indexer')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/skimage/segmentation/_felzenszwalb.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/skimage/segmentation/_felzenszwalb.py'),
                      'felzenszwalb')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/skimage/segmentation/morphsnakes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/Lib/site-packages/skimage/segmentation/morphsnakes.py'),
                      'checkerboard_level_set')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/predict.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/predict.py'),
                      'concat_lenends')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/pretrained.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/pretrained.py'),
                      'model_from_checkpoint_path')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/keras_segmentation/train.py'),
                      'CheckpointsCallback')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/core/_methods.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/lib/index_tricks.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/numpy/lib/index_tricks.py'),
                      'array_function_dispatch')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/base.py'),
                      'DataError')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/frame.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/frame.py'),
                             '_put_str')]],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/groupby/grouper.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/groupby/grouper.py'),
                      'Grouper')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/indexes/multi.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/indexes/multi.py'),
                      'MultiIndex')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/internals/managers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/pandas/core/internals/managers.py'),
                      'BlockManager')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/skimage/morphology/watershed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/skimage/morphology/watershed.py'),
                      'watershed')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/skimage/util/dtype.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/skimage/util/dtype.py'),
                      'convert')]},
        loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/sklearn/metrics/_classification.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Dev/Python/venvs/venv_python_3_7_4/lib/site-packages/sklearn/metrics/_classification.py'),
                      'accuracy_score')]},
        loc('../../../../../Revisioni/Editorships/SpecialIssue-Radiomics/cfp/cfp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Revisioni/Editorships/SpecialIssue-Radiomics/cfp/cfp.py'),
                      'attachment_filename')]},
        loc('../../../practical-graphic-communication/code/data-scrapìng/causes_of_death_eurostat.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/input-to-charts/causes-of-death-eurostat-2020'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/input-to-charts/causes-of-death-eurostat-2020.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/input-to-charts/causes-of-death-usa-2020.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/input-to-charts/causes-of-death-usa-2020.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/iris.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data/other/icd10-codes-eurostat.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/data_cache/top6-us-imports-source-countries.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/frequency-distributions/dot_diagram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/frequency-distributions/dot_diagram.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/gantt_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/add_axes_to_figure_manually.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/add_axes_to_figure_manually.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/add_title_and_labels_to_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/add_title_and_labels_to_axes.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/adding_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/adding_axes.py'),
                      'ax1')]},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/figure.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/generate_figure_and_axes_via_subplots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/generate_figure_and_axes_via_subplots.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/matplotlib-basics/generate_insets.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/matplotlib-basics/generate_insets.py'),
                      'ax_inset_1')]},
        loc('../../../practical-graphic-communication/code/matplotlibrc'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/output/matplotlibrc'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/pie-charts/pie_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/add_axes_to_figure_manually.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/add_axes_to_figure_manually.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/anatomy_of_an_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/anatomy_of_an_axes.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/area_chart_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/area_chart_multiple.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/area_chart_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/area_chart_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/area_plot_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/area_plot_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/bar_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/bar_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/bar_chart_variation_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/bar_chart_variation_1.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/box_and_strip_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/box_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/box_plots.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/box_plots_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/box_plots_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/cartogram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/cartogram.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/change_background_colour.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/change_background_colour.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/change_background_colour_safe.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/change_background_colour_safe.py'),
                      'ax_1')]},
        loc('../../../practical-graphic-communication/code/scripts/chord_diagram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/chord_diagram.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/scripts/chord_diagram_directed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/chord_diagram_directed.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/chord_diagram_undirected.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/chord_diagram_undirected.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/choroplet_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/dot_diagram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/dot_diagram.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/scripts/dot_plot_eu_per_capita_gdp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/dot_plot_eu_per_capita_gdp.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/dot_plot_per_capita_gdp_eu.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/dot_plot_per_capita_gdp_eu.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/doughnut_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/europe_administrative_boundaries.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/europe_administrative_boundaries.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/europe_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/europe_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/add_axes_to_figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/add_axes_to_figure.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/area_chart_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/area_chart_multiple.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/area_chart_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/area_chart_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_variation_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_variation_1.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_with_style_variations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/bar_chart_with_style_variations.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/box_and_strip_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/box_and_strip_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/box_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/box_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/box_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/box_plots.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/cartogram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/cartogram.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/change_background_colour.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/change_background_colour.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/chord_diagram_directed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/chord_diagram_directed.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/chord_diagram_undirected.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/chord_diagram_undirected.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/choroplet_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/choroplet_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/depth_sorting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/depth_sorting.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/dot_diagram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/dot_diagram.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/doughnut_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/empty_figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/empty_figure.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/europe_administrative_boundaries.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/europe_administrative_boundaries.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/flow_chart_factorial.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/flow_chart_factorial.py'),
                      'flowchart')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/flowchart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/flowchart_base.py'),
                      'arrow1')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/flowchart_factorial.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/flowchart_factorial.py'),
                      'arrow1')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/gantt_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/gantt_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/gantt_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/gantt_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/gantt_chart_with_phases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/gantt_chart_with_phases.py'),
                      'activity')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/gantt_with_phases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/gantt_with_phases.py'),
                      'activity')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/generate_figure_and_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/generate_figure_and_axes.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/generate_insets.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/generate_insets.py'),
                      'ax_inset_1')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/heat_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/heat_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/heat_map_with_annotations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/heat_map_with_annotations.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/hexgrid_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/hexgrid_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/histogram_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/histogram_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/horizontal_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/horizontal_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/horizontal_timeline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/horizontal_timeline.py'),
                      'baseline')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_divergent_stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_divergent_stacked_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_divergent_stacked_bar_charts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_divergent_stacked_bar_charts.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_stacked_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_stacked_bar_charts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/hundred_percent_stacked_bar_charts.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/lattice_bubble_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/lattice_bubble_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/line_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/line_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_multiple.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_split.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/line_chart_split.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/multiple_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/multiple_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/one_level_tree_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/one_level_tree_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/packed_bubble_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/packed_bubble_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/paired_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/paired_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pert_aoa.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pert_aoa.py'),
                      'arc')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pert_aon.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pert_aon.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_exploded.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_exploded.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_side_legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pie_chart_side_legend.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/proportional_symbol_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/proportional_symbol_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/pyramid_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/pyramid_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/sankey_many_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/sankey_many_to_many.py'),
                      'all_colours')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/sankey_one_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/sankey_one_to_many.py'),
                      'cmap')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bmi_pressure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bmi_pressure.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bubble_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bubble_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bubble_plot_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bubble_plot_with_annotations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_bubble_plot_with_annotations.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_base.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_datasaurus_dozen.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_datasaurus_dozen.py'),
                      'axs')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_matrix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_matrix.py'),
                      'axes')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_categories.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_categories.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_categories_fancy_version.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_categories_fancy_version.py'),
                      'axin')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_regline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scatter_plot_with_regline.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/scattered_vs_regular_points.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/scattered_vs_regular_points.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/semi_doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/semi_doughnut_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart_legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/slope_chart_legend.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/stacked_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/strip_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/strip_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/swarm_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/swarm_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/title_and_subtitle.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/title_and_subtitle.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/transparency.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/transparency.py'),
                      'alpha')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/two_level_tree_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/two_level_tree_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/vertical_timeline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/vertical_timeline.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/violin_and_box_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/violin_and_box_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/violin_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/violin_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart_matrix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart_matrix.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/waffle_chart_multiple.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/executable/z_order.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/executable/z_order.py'),
                      'center')]},
        loc('../../../practical-graphic-communication/code/scripts/figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/figure.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/scripts/flow_chart_factorial.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/flow_chart_factorial.py'),
                      'flowchart')]},
        loc('../../../practical-graphic-communication/code/scripts/flow_chart_repair_lamp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/flow_chart_repair_lamp.py'),
                      'decision1')]},
        loc('../../../practical-graphic-communication/code/scripts/flow_chart_replace_bulb.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/flow_chart_replace_bulb.py'),
                      'decision2')]},
        loc('../../../practical-graphic-communication/code/scripts/flowchart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/flowchart_base.py'),
                      'arrow1')]},
        loc('../../../practical-graphic-communication/code/scripts/flowchart_factorial.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/flowchart_factorial.py'),
                      'arrow1')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/bar_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/bar_chart_base.py'),
                      'subtitle')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/box_and_strip_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/box_and_strip_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/box_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/box_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/box_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/box_plots.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/choroplet_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/choroplet_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/doughnut_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/generate_figure_and_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/generate_figure_and_axes.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/heat_map_with_annotations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/heat_map_with_annotations.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/hundred_percent_divergent_stacked_bar_charts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/hundred_percent_divergent_stacked_bar_charts.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/hundred_percent_stacked_bar_charts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/hundred_percent_stacked_bar_charts.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/paired_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/paired_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/pie_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/pie_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/sankey_one_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/sankey_one_to_many.py'),
                      'df')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/scatter_plot_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/scatter_plot_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/semi_doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/semi_doughnut_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/swarm_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/swarm_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/transparency.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/transparency.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/vertical_timeline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/vertical_timeline.py'),
                      'baseline_col')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/violin_and_box_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/violin_and_box_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/violin_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/for-display/violin_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/for-display/zorder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/gantt_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/gantt_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/gantt_with_phases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/gantt_with_phases.py'),
                      'activities')]},
        loc('../../../practical-graphic-communication/code/scripts/generate_figure_and_axes_via_subplots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/generate_figure_and_axes_via_subplots.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/generate_figure_and_axes_via_subplots_safe.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/generate_figure_and_axes_via_subplots_safe.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/generate_insets.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/generate_insets.py'),
                      'ax_inset_1')]},
        loc('../../../practical-graphic-communication/code/scripts/heat_map_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/heat_map_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/heat_map_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/heat_map_single.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/scripts/heat_map_with_annotations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/hello_world.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/hexgrid_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/hist_eu_per_capita_gdp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/hist_eu_per_capita_gdp.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/hist_eu_pop.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/hist_eu_pop.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/hist_per_capita_gdp_eu.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/hist_per_capita_gdp_eu.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/hundred_percent_divergent_stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/hundred_percent_stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/lattice_bubble_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/line_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/line_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/line_chart_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/line_chart_multiple.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/line_chart_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/line_chart_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/line_chart_split.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/line_chart_split.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/multiple_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/multiple_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/one_level_tree_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/one_level_tree_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/packed_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/packed_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/packed_bubble_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/packed_bubble_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/paired_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/paired_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/paired_bar_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/paired_bar_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pert_aoa.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../practical-graphic-communication/code/scripts/pert_aoa.py'),
                      'arc')]},
        loc('../../../practical-graphic-communication/code/scripts/pert_aon.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pert_aon.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_exploded.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart_exploded.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_partially_exploded.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart_partially_exploded.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_plotly.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart_plotly.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_side_legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pie_chart_side_legend.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/pie_chart_side_legend_and_percentages.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/plot_iris_scatter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/plot_iris_scatter.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/proportional_symbol_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/pyramid_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/pyramid_plot.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/regular_vs_scatter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/regular_vs_scatter.py'),
                      'axs')]},
        loc('../../../practical-graphic-communication/code/scripts/sankey_diagram_one_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/sankey_diagram_one_to_many.py'),
                      'cmap')]},
        loc('../../../practical-graphic-communication/code/scripts/sankey_many_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/sankey_many_to_many.py'),
                      'alpha')]},
        loc('../../../practical-graphic-communication/code/scripts/sankey_one_to_many.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/sankey_one_to_many.py'),
                      'c')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_bmi_pressure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_bmi_pressure.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_bmi_vs_pressure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_bmi_vs_pressure.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_bubble_plot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_bubble_plot.py'),
                      'area_scale')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_bubble_plot_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/scatter_bubble_plot_with_annotations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/scatter_iris_sepal_length_vs_width.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_iris_sepal_length_vs_width.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_iris_single.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_iris_single.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_base.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_datasaurus_dozen.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_matrix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_matrix.py'),
                      'axes')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_small_multiple.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_small_multiple.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_small_multiples.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_small_multiples.py'),
                      'axes')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories_fancy_legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories_fancy_legend.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories_fancy_version.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_categories_fancy_version.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_regline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scatter_plot_with_regline.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/scattered-vs_regular_points.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/scattered-vs_regular_points.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/semi_doughnut_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/scripts/slope_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/slope_chart.py'),
                      'countries')]},
        loc('../../../practical-graphic-communication/code/scripts/slope_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/slope_chart_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/slope_chart_legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/slope_chart_legend.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/stacked_bar_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/stacked_bar_chart.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/strip_plots_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/strip_plots_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/swarm_plots_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/swarm_plots_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/timeline.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/timeline.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/title_and_subtitle.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/title_and_subtitle.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/tree_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/tree_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/two_level_tree_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/two_level_tree_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/uk_wpc_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/uk_wpc_map.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/scripts/violin_plots_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/violin_plots_base.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/scripts/violin_plots_box_inside.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/scripts/violin_plots_box_inside.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/snippets/show_causes_of_death_usa_2020.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/snippets/show_causes_of_death_usa_2020.py'),
                      'df')]},
        loc('../../../practical-graphic-communication/code/src/data-scrapìng/causes_of_death_eurostat.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/src/pie-charts/pie_chart.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/src/pie_chart_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/src/pie_chart_base.py'),
                      'df')]},
        loc('../../../practical-graphic-communication/code/test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/test/choroplet_map.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/test/choroplet_map.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/test/choroplet_map_for_display.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/test/choroplet_map_for_display.py'),
                      'ax')]},
        loc('../../../practical-graphic-communication/code/test/test_convert_script.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/test/test_convert_script.py'),
                      'comment')]},
        loc('../../../practical-graphic-communication/code/third_parties/matplotlib-extra/src/mpl_extra/treemap.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../practical-graphic-communication/code/third_parties/matplotlib-extra/src/mpl_extra/treemap.py'),
                      'draw_subgroup')]},
        loc('../../../practical-graphic-communication/code/third_parties/packed_bubbles.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../practical-graphic-communication/code/third_parties/packed_bubbles.py'),
                      'BubbleChart')]},
        loc('../../../practical-graphic-communication/code/utilities/convert_scripts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../practical-graphic-communication/code/utilities/convert_scripts.py'),
                      'convert_comment')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/draw_scatter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/draw_scatter.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/functions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/functions.py'),
                      'draw_scatter')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/generate_charts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/utilities/correlation/high_neg_r_and_rho.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/high_neg_r_and_rho.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/high_neg_rho_moderate_r.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/high_neg_rho_moderate_r.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/high_pos_r_and_rho.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/high_pos_r_and_rho.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/high_pos_rho_moderate_r.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/high_pos_rho_moderate_r.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_monotonic_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_monotonic_correlation.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_pos_r_and_rho.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_pos_r_and_rho.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_positive_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/moderate_positive_correlation.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/negligible_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/negligible_correlation.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/negligible_r_and_rho.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/negligible_r_and_rho.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/no_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/no_correlation.py'),
                      'annotation')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/strong_monotonic_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/strong_monotonic_correlation.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/strong_negative_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/strong_negative_correlation.py'),
                      'x1')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/strong_pos_rho_moderate_r.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/strong_pos_rho_moderate_r.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/correlation/strong_positive_correlation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/correlation/strong_positive_correlation.py'),
                      'fig')]},
        loc('../../../practical-graphic-communication/code/utilities/edu_expenditure_g20/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/edu_expenditure_g20/common.py'),
                      'abs_spending_src')]},
        loc('../../../practical-graphic-communication/code/utilities/edu_expenditure_g20/retrieve_data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/edu_expenditure_g20/retrieve_data.py'),
                      'comment')]},
        loc('../../../practical-graphic-communication/code/utilities/edu_expenditure_g20/wrangle_data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/utilities/execute_script.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/execute_script.py'),
                      'code')]},
        loc('../../../practical-graphic-communication/code/utilities/flow_chart_elements.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/flow_chart_elements.py'),
                      'destination')]},
        loc('../../../practical-graphic-communication/code/utilities/heart_2020_kaggle_dataset.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../practical-graphic-communication/code/utilities/heart_2020_kaggle_dataset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/heart_2020_kaggle_dataset.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/utilities/london_rainfall/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/london_rainfall/common.py'),
                      'abs_spending_src')]},
        loc('../../../practical-graphic-communication/code/utilities/london_rainfall/retrieve_data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/london_rainfall/retrieve_data.py'),
                      'a')]},
        loc('../../../practical-graphic-communication/code/utilities/retrieve_historic_station_data_uk_met.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/retrieve_historic_station_data_uk_met.py'),
                      'body')]},
        loc('../../../practical-graphic-communication/code/utilities/uk_met_office/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/uk_met_office/common.py'),
                      'comment')]},
        loc('../../../practical-graphic-communication/code/utilities/uk_met_office/retrieve_historic_station_data_uk_met.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../practical-graphic-communication/code/utilities/uk_met_office/retrieve_historic_station_data_uk_met.py'),
                      'body')]},
        loc('box_and_script_plots.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('box_and_script_plots.py'),
                      'a')]},
        loc('common.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('common.py'),
        'class_abbreviations')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/ntpath.py'),
                      'abspath')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/pythreshold/global_th/min_err.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/pythreshold/global_th/min_err.py'),
                             '__copyright__')]],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/pythreshold/global_th/min_err.py'),
                      'min_err_threshold')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/scipy/spatial/distance.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/scipy/spatial/distance.py'),
                      'braycurtis')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/sklearn/cluster/_kmeans.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/sklearn/cluster/_kmeans.py'),
                             'KMeans')]],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/sklearn/cluster/_kmeans.py'),
                      'KMeans')]},
        loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/sklearn/utils/validation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python-3-7-4/Lib/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/_strptime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/3-10-4/lib/_strptime.py'),
                      'LocaleTime')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/collections/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/3-10-4/lib/collections/abc.py'),
                      '')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/inspect.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files (x86)/WingPro-8/resources/typeshed/stdlib/3/inspect.pyi'),
                      'ArgInfo')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/re.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/3-10-4/lib/re.py'),
                      'compile')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/sre_parse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/3-10-4/lib/sre_parse.py'),
                      'ASCIILETTERS')]},
        loc('file:C:/Program Files/Python/3-10-4/lib/urllib/request.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/3-10-4/lib/urllib/request.py'),
                      'AbstractBasicAuthHandler')]},
        loc('file:C:/Program Files/Python/3-8-6/Lib/encodings/cp1252.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/3-8-6/Lib/encodings/cp1252.py'),
                      'Codec')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/efficientnet/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/efficientnet/__init__.py'),
                             '_KERAS_UTILS')]],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/efficientnet/__safe____init__.py'),
                      '')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_applications/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_applications/__init__.py'),
                      'correct_pad')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/data_utils/data_loader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/data_utils/data_loader.py'),
                      'class_colors')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/models/segnet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/models/segnet.py'),
                      'm')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/predict.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/predict.py'),
                      'concat_lenends')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/keras_segmentation/train.py'),
                      'CheckpointsCallback')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/backbones/__init__.py'),
                      '')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/base/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/base/functional.py'),
                      'average')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/base/objects.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/base/objects.py'),
                      'KerasObject')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/losses.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/losses.py'),
                      'bce_dice_loss')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/models/pspnet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/segmentation_models/models/pspnet.py'),
                      'backend')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/autograph/impl/api.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/autograph/impl/api.py'),
                      'AutoGraphError')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/eager/execute.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/eager/execute.py'),
                      'args_to_matching_eager')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/framework/constant_op.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/framework/constant_op.py'),
                      'constant')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/callbacks.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/callbacks.py'),
                      'BackupAndRestore')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/engine/data_adapter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/engine/data_adapter.py'),
                      'ALL_ADAPTER_CLS')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/engine/training.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/engine/training.py'),
                      'concat')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/layers/merge.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/layers/merge.py'),
                      'Add')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/utils/generic_utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/Lib/site-packages/tensorflow/python/keras/utils/generic_utils.py'),
                      'check_for_unexpected_keys')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/internals/construction.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/xlsxwriter/workbook.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python/venvs/3-8-6/lib/site-packages/xlsxwriter/workbook.py'),
                      'Workbook')]},
        loc('file:C:/program files/python/3-8-6/lib/json/decoder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/program files/python/3-8-6/lib/json/decoder.py'),
                      'BACKSLASH')]},
        loc('file:C:/program files/python/3-8-6/lib/tkinter/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/program files/python/3-8-6/lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/bokeh/io/webdriver.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/bokeh/io/webdriver.py'),
                      'create_chromium_webdriver')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/bokeh/util/dependencies.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/bokeh/util/dependencies.py'),
                      'import_optional')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/holoviews/util/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/holoviews/util/command.py'),
                      '')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/figure.py'),
                      'figaspect')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/param/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/param/__init__.py'),
                      'abbreviate_paths')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/pySankey/sankey.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/pySankey/sankey.py'),
                      'check_data_matches_labels')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/seaborn/_core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/seaborn/_core.py'),
                      'categorical_order')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/seaborn/_decorators.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/seaborn/_decorators.py'),
                      'share_init_params_with_map')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/PIL/Image.py'),
                      'alpha_composite')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/PIL/ImageFile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/_plotly_utils/basevalidators.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/_plotly_utils/basevalidators.py'),
                      'AngleValidator')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/bokeh/core/has_props.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/bokeh/core/has_props.py'),
                      'abstract')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/dateutil/parser/_parser.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/dateutil/parser/_parser.py'),
                      'DEFAULTPARSER')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geopandas/array.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geopandas/array.py'),
                      'from_shapely')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geopandas/plotting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geopandas/plotting.py'),
                      'deprecated')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geoplot/geoplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/geoplot/geoplot.py'),
                      'cartogram')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/animation.py'),
                      '')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/__init__.py'),
                      'caching_module_getattr')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/deprecation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/deprecation.py'),
                      'DECORATORS')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_mathtext.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_mathtext.py'),
                      'Accent')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axis.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/axis.py'),
                      'Axis')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/backends/backend_agg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/backends/backend_agg.py'),
                      'FigureCanvasAgg')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/category.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/category.py'),
                      'StrCategoryConverter')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/collections.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/collections.py'),
                      'AsteriskPolygonCollection')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/font_manager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/font_manager.py'),
                      'afmFontProperty')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/legend.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/legend.py'),
                      'DraggableLegend')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/markers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/markers.py'),
                      'CARETDOWN')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/patches.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/patches.py'),
                      'Annulus')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/table.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/table.py'),
                      'Cell')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/text.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/text.py'),
                      'Annotation')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/ticker.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/ticker.py'),
                      'AsinhLocator')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/transforms.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/mpl_chord_diagram/chord_diagram.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/mpl_chord_diagram/chord_diagram.py'),
                      'chord_arc')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/__init__.pyi'),
                      'absolute')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/core/function_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/core/function_base.py'),
                      'add_newdoc')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/function_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/function_base.py'),
                      'angle')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/histograms.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/histograms.py'),
                      'array_function_dispatch')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/stride_tricks.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/lib/stride_tricks.py'),
                      'as_strided')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/ma/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/numpy/ma/core.py'),
                      'abs')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/compat/__init__.py'),
                      '')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/_libs/lib.pyx'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/_libs/ops.pyx'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/_libs/parsers.pyx'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/_libs/tslibs/conversion.pyx'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/arrays/datetimes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/arrays/datetimes.py'),
                      'DatetimeArray')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/common.py'),
                      'all_none')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/expr.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/expr.py'),
                      'add_ops')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/expressions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/expressions.py'),
                      'evaluate')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/ops.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/ops.py'),
                      'ARITH_OPS_SYMS')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/scope.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/computation/scope.py'),
                      'DEFAULT_GLOBALS')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/dtypes/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/dtypes/common.py'),
                      'classes')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/groupby.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/groupby.py'),
                      'BaseGroupBy')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/grouper.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/grouper.py'),
                      'get_grouper')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/ops.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/groupby/ops.py'),
                      'BaseGrouper')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexers/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexers/utils.py'),
                      'check_array_indexer')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexes/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexes/base.py'),
                      'disallow_kwargs')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexes/range.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexes/range.py'),
                      'RangeIndex')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexing.py'),
                      'check_bool_indexer')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/internals/construction.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/ops/array_ops.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/ops/array_ops.py'),
                      'arithmetic_op')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/concat.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/concat.py'),
                      'concat')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/merge.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/merge.py'),
                      'get_join_indexers')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/pivot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/pivot.py'),
                      'crosstab')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/reshape.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/reshape/reshape.py'),
                      'get_dummies')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/roperator.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/roperator.py'),
                      'radd')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/series.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/series.py'),
                      'Series')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/strings/accessor.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/strings/accessor.py'),
                      'cat_core')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/common.py'),
                      'BaseBufferT')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/formats/format.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/formats/format.py'),
                      'buffer_put_lines')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/parsers/base_parser.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/parsers/base_parser.py'),
                      'is_index_col')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/parsers/readers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/parsers/readers.py'),
                      'MANDATORY_DIALECT_ATTRS')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/util/_decorators.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/util/_decorators.py'),
                      'Appender')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/plotly/basedatatypes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/plotly/basedatatypes.py'),
                      'BaseFigure')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/plotly/io/_kaleido.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/plotly/io/_kaleido.py'),
                      'full_figure_for_development')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/elements/elements.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/elements/elements.py'),
                      'Element')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/elements/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/elements/lines.py'),
                      'Annotate')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/flow/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/flow/flow.py'),
                      '')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/flow/flow.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/flow/flow.py'),
                      'Box')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/schemdraw.py'): {'expanded-nodes': [[('class def',
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/schemdraw.py'),
        'Drawing')]],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/schemdraw.py'),
                      'config')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/util.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/schemdraw/util.py'),
                      'angle')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/categorical.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/categorical.py'),
                      'barplot')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/matrix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/matrix.py'),
                      'ClusterGrid')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/regression.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/regression.py'),
                      'lmplot')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/shapely/coordinates.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/shapely/coordinates.py'),
                      'count_coordinates')]},
        loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/shapely/geometry/polygon.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/shapely/geometry/polygon.py'),
                      'InteriorRingSequence')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/nibabel/loadsave.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/nibabel/loadsave.py'),
                      'guessed_image_type')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/numpy/core/_asarray.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/numpy/core/_asarray.py'),
                      'asanyarray')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/frame.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/indexes/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/indexes/base.py'),
                      'default_index')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/indexing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/indexing.py'),
                      'check_bool_indexer')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/nanops.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/nanops.py'),
                      'bn')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/series.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/core/series.py'),
                      'Series')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/io/common.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/io/common.py'),
                      'file_path_to_url')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/io/parsers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pandas/io/parsers.py'),
                      'count_empty_vals')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/dataset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/dataset.py'),
                      'Dataset')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/filereader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/filereader.py'),
                      'data_element_generator')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/pixel_data_handlers/util.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/pydicom/pixel_data_handlers/util.py'),
                      'apply_color_lut')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/skimage/measure/_marching_cubes_lewiner.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/skimage/measure/_marching_cubes_lewiner.py'),
                      'EDGETORELATIVEPOSX')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/neighbors/_classification.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/neighbors/_classification.py'),
                      'KNeighborsClassifier')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/preprocessing/_data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/preprocessing/_data.py'),
                      'add_dummy_feature')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/utils/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/utils/__init__.py'),
                      'all_estimators')]},
        loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/utils/validation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Program Files/Python/venvs/3-8-6/lib/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('file:c:/program files/python/3-8-6/lib/abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:c:/program files/python/3-8-6/lib/abc.py'),
                      'ABC')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #4'),
        'Dataset')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #6'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #8'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #9'): {'expanded-nodes': [],
                                       'selected-nodes': [[('function def',
        loc('unknown:<untitled> #10'),
        'model_from_checkpoint_path')]],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #11'),
        'model_from_checkpoint_path')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3],
        'notebook_display': 'normal',
        'notebook_percent': 0.2921348314606742,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': "file:C:\\Program Files (x86)\\WingPro\\bin\\', 'mode' : 'swae'",
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '\\codebullet{6}',
                                       'fReverse': True,
                                       'fSearchText': 'spine',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': True,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'Per_capita',
                                       'fReverse': False,
                                       'fSearchText': 'Pro_capita',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0,
                       'zoom': 0}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('debug-io',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('box_and_script_plots.py'),
        {'attrib-starts': [],
         'code-line': '    ax.set_ylabel(ylabel="Spearman\'s $\\rho$")\r\n',
         'first-line': 16,
         'folded-linenos': [],
         'sel-line': 35,
         'sel-line-start': 1088,
         'selection_end': 1107,
         'selection_start': 1107,
         'zoom': -1},
        1701966295.3238363],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_mathtext.py'),
         {'attrib-starts': [('Parser|0|',
                             1813),
                            ('Parser|0|.parse|0|',
                             2150)],
          'code-line': '            raise ValueError("\\n" + ParseException.explain(err, 0)) from None\n',
          'first-line': 2145,
          'folded-linenos': [],
          'sel-line': 2164,
          'sel-line-start': 80090,
          'selection_end': 80090,
          'selection_start': 80090,
          'zoom': 0},
         1701966305.8118653],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': '    ax.set_ylabel(ylabel="Spearman\'s $\\\\rho$")\r\n',
          'first-line': 16,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1088,
          'selection_end': 1127,
          'selection_start': 1127,
          'zoom': -1},
         1701966318.6139715],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexers/utils.py'),
         {'attrib-starts': [('check_key_length|0|',
                             408)],
          'code-line': '            raise ValueError("Columns must be same length as key")\r\n',
          'first-line': 416,
          'folded-linenos': [],
          'sel-line': 427,
          'sel-line-start': 11996,
          'selection_end': 11996,
          'selection_start': 11996,
          'zoom': 0},
         1701966340.061692],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': '    ax.set_xlabel(xlabel=None)\r\n',
          'first-line': 16,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1065,
          'selection_end': 1084,
          'selection_start': 1084,
          'zoom': -1},
         1701966460.5457299],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexers/utils.py'),
         {'attrib-starts': [('check_key_length|0|',
                             408)],
          'code-line': '            raise ValueError("Columns must be same length as key")\r\n',
          'first-line': 404,
          'folded-linenos': [],
          'sel-line': 427,
          'sel-line-start': 11996,
          'selection_end': 11996,
          'selection_start': 11996,
          'zoom': 0},
         1701966470.4715424],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': "    df[['Class', 'dummy']] = df['Feature'].str.rstrip('_')\r\n",
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 18,
          'sel-line-start': 478,
          'selection_end': 535,
          'selection_start': 535,
          'zoom': -1},
         1701966563.4331815],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'),
         {'attrib-starts': [('DataFrame|0|',
                             458),
                            ('DataFrame|0|._iset_not_inplace|0|',
                             3703)],
          'code-line': '                raise ValueError("Columns must be same length as key")\r\n',
          'first-line': 3703,
          'folded-linenos': [],
          'sel-line': 3720,
          'sel-line-start': 135119,
          'selection_end': 135119,
          'selection_start': 135119,
          'zoom': 0},
         1701966593.0681624],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': "    ax.axhline(y=0.0, color='grey', linestyle='-', width=0.5) \r\n",
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 998,
          'selection_end': 1058,
          'selection_start': 1058,
          'zoom': -1},
         1701967125.6475558],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/artist.py'),
         {'attrib-starts': [('Artist|0|',
                             116),
                            ('Artist|0|._update_props|0|',
                             1175)],
          'code-line': '                        raise AttributeError(\n',
          'first-line': 1173,
          'folded-linenos': [],
          'sel-line': 1192,
          'sel-line-start': 40739,
          'selection_end': 40739,
          'selection_start': 40739,
          'zoom': 0},
         1701967130.5403755],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': '                linewidth=1, ax=ax, alpha=0.5, legend=False)    \r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1100,
          'selection_end': 1116,
          'selection_start': 1116,
          'zoom': -1},
         1701967223.0507758],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/categorical.py'),
         {'attrib-starts': [('_CategoricalPlotter|0|',
                             43),
                            ('_CategoricalPlotter|0|.plot_boxes|0|',
                             582)],
          'code-line': '            artists = ax.bxp(**boxplot_kws)\n',
          'first-line': 671,
          'folded-linenos': [],
          'sel-line': 690,
          'sel-line-start': 28144,
          'selection_end': 28144,
          'selection_start': 28144,
          'zoom': 0},
         1701967227.0019274],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': "                hue='Class_abbrv', \r\n",
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1051,
          'selection_end': 1086,
          'selection_start': 1086,
          'zoom': -1},
         1701967236.7484624],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/categorical.py'),
         {'attrib-starts': [('_CategoricalPlotter|0|',
                             43),
                            ('_CategoricalPlotter|0|.plot_boxes|0|',
                             582)],
          'code-line': '            artists = ax.bxp(**boxplot_kws)\n',
          'first-line': 671,
          'folded-linenos': [],
          'sel-line': 690,
          'sel-line-start': 28144,
          'selection_end': 28144,
          'selection_start': 28144,
          'zoom': 0},
         1701967244.6162345],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': '    ax.set_xticklabels(rotation=90)\r\n',
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 1766,
          'selection_end': 1788,
          'selection_start': 1788,
          'zoom': -1},
         1702055308.8363214],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/deprecation.py'),
         {'attrib-starts': [('rename_parameter|0|',
                             256),
                            ('rename_parameter|0|.wrapper|0|',
                             289)],
          'code-line': '        return func(*args, **kwargs)\n',
          'first-line': 274,
          'folded-linenos': [],
          'sel-line': 296,
          'sel-line-start': 11160,
          'selection_end': 11160,
          'selection_start': 11160,
          'zoom': 0},
         1702055313.4446535],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': "    ax.text(x=0.0, y=0.0, s='Negligible', va='center', transparency=0.4)\r\n",
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1559,
          'selection_end': 1630,
          'selection_start': 1630,
          'zoom': -1},
         1702055642.8163111],
        [loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/artist.py'),
         {'attrib-starts': [('Artist|0|',
                             116),
                            ('Artist|0|._update_props|0|',
                             1175)],
          'code-line': '                        raise AttributeError(\n',
          'first-line': 1173,
          'folded-linenos': [],
          'sel-line': 1192,
          'sel-line-start': 40739,
          'selection_end': 40739,
          'selection_start': 40739,
          'zoom': 0},
         1702055691.4253898],
        [loc('box_and_script_plots.py'),
         {'attrib-starts': [],
          'code-line': '    fig, ax = plt.subplots(nrows = 1, ncols = 1)\r\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 32,
          'sel-line-start': 913,
          'selection_end': 913,
          'selection_start': 913,
          'zoom': -1},
         1702058613.2940826],
        [loc('common.py'),
         {'attrib-starts': [],
          'code-line': "                       'GLSZM': 'GLSZM'}",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 8,
          'sel-line-start': 304,
          'selection_end': 327,
          'selection_start': 327,
          'zoom': -1},
         1702058693.7442663]],
        20),
        'current-loc': loc('box_and_script_plots.py'),
        'editor-state-list': [(loc('box_and_script_plots.py'),
                               {'attrib-starts': [],
                                'code-line': "    src_file = (f'{data_folder}/corr_table_{resampling_method}.csv')\r\n",
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 14,
                                'sel-line-start': 331,
                                'selection_end': 398,
                                'selection_start': 398,
                                'zoom': -1}),
                              (loc('common.py'),
                               {'attrib-starts': [],
                                'code-line': "                       'GLSZM': 'GLSZM'}",
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 8,
                                'sel-line-start': 304,
                                'selection_end': 327,
                                'selection_start': 327,
                                'zoom': -1}),
                              (loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'),
                               {'attrib-starts': [('DataFrame|0|',
        458),
        ('DataFrame|0|._iset_not_inplace|0|',
         3703)],
                                'code-line': '                raise ValueError("Columns must be same length as key")\r\n',
                                'first-line': 3703,
                                'folded-linenos': [],
                                'sel-line': 3720,
                                'sel-line-start': 135119,
                                'selection_end': 135119,
                                'selection_start': 135119,
                                'zoom': 0}),
                              (loc('file:C:/Program Files (x86)/WingPro-8/doc/TOC'),
                               {'displayed-index': 0,
                                'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}})],
        'has-focus': False,
        'locked': False},
        [loc('box_and_script_plots.py'),
         loc('common.py'),
         loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'),
         loc('file:C:/Program Files (x86)/WingPro-8/doc/TOC')]),
                               'open_files': ['C:/Program Files (x86)/WingPro-8/doc/TOC',
        'c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py',
        'common.py',
        'box_and_script_plots.py']},
        'saved_notebook_display': None,
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1702058278.9016144),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1701963547.5517335),
                 'user_data': {}},
        'window-alloc': (449,
                         0,
                         984,
                         832)}]}
guimgr.recent-documents = [loc('box_and_script_plots.py'),
                           loc('common.py')]
guimgr.visual-state = {loc('file:c:/Program Files/Python/venvs/3-10-4/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        116),
        ('Artist|0|._update_props|0|',
         1175)],
        'code-line': '                        raise AttributeError(\n',
        'first-line': 1173,
        'folded-linenos': [],
        'sel-line': 1192,
        'sel-line-start': 40739,
        'selection_end': 40739,
        'selection_start': 40739,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_api/deprecation.py'): {'attrib-starts': [('rename_parameter|0|',
        256),
        ('rename_parameter|0|.wrapper|0|',
         289)],
        'code-line': '        return func(*args, **kwargs)\n',
        'first-line': 274,
        'folded-linenos': [],
        'sel-line': 296,
        'sel-line-start': 11160,
        'selection_end': 11160,
        'selection_start': 11160,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/matplotlib/_mathtext.py'): {'attrib-starts': [('Parser|0|',
        1813),
        ('Parser|0|.parse|0|',
         2150)],
        'code-line': '            raise ValueError("\\n" + ParseException.explain(err, 0)) from None\n',
        'first-line': 2145,
        'folded-linenos': [],
        'sel-line': 2164,
        'sel-line-start': 80090,
        'selection_end': 80090,
        'selection_start': 80090,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/common.py'): {'attrib-starts': [('require_length_match|0|',
        551)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 536,
        'folded-linenos': [],
        'sel-line': 556,
        'sel-line-start': 15827,
        'selection_end': 15827,
        'selection_start': 15827,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/frame.py'): {'attrib-starts': [('DataFrame|0|',
        458),
        ('DataFrame|0|._iset_not_inplace|0|',
         3703)],
        'code-line': '                raise ValueError("Columns must be same length as key")\r\n',
        'first-line': 3701,
        'folded-linenos': [],
        'sel-line': 3720,
        'sel-line-start': 135119,
        'selection_end': 135119,
        'selection_start': 135119,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexers/utils.py'): {'attrib-starts': [('check_key_length|0|',
        408)],
        'code-line': '            raise ValueError("Columns must be same length as key")\r\n',
        'first-line': 416,
        'folded-linenos': [],
        'sel-line': 427,
        'sel-line-start': 11996,
        'selection_end': 11996,
        'selection_start': 11996,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/indexes/base.py'): {'attrib-starts': [('Index|0|',
        260),
        ('Index|0|.drop|0|',
         6614)],
        'code-line': '                raise KeyError(f"{list(labels[mask])} not found in axis")\r\n',
        'first-line': 6624,
        'folded-linenos': [],
        'sel-line': 6643,
        'sel-line-start': 231320,
        'selection_end': 231320,
        'selection_start': 231320,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/core/strings/accessor.py'): {'attrib-starts': [('forbid_nonstring_types|0|',
        63),
        ('forbid_nonstring_types|0|._forbid_nonstring_types|0|',
         113),
        ('forbid_nonstring_types|0|._forbid_nonstring_types|0|.wrapper|0|',
         117)],
        'code-line': '            return func(self, *args, **kwargs)\r\n',
        'first-line': 105,
        'folded-linenos': [],
        'sel-line': 124,
        'sel-line-start': 3820,
        'selection_end': 3820,
        'selection_start': 3820,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/pandas/io/common.py'): {'attrib-starts': [('get_handle|2|',
        604)],
        'code-line': '            handle = open(\r\n',
        'first-line': 768,
        'folded-linenos': [],
        'sel-line': 788,
        'sel-line-start': 25229,
        'selection_end': 25229,
        'selection_start': 25229,
        'zoom': 0},
                       loc('file:c:/Program Files/Python/venvs/3-10-4/lib/site-packages/seaborn/categorical.py'): {'attrib-starts': [('_CategoricalPlotter|0|',
        43),
        ('_CategoricalPlotter|0|.plot_boxes|0|',
         582)],
        'code-line': '            artists = ax.bxp(**boxplot_kws)\n',
        'first-line': 671,
        'folded-linenos': [],
        'sel-line': 690,
        'sel-line-start': 28144,
        'selection_end': 28144,
        'selection_start': 28144,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.initial-dir = {None: ('custom',
                           'g:\\Data\\Disk_C\\Utenti\\Francesco\\Pac_F_Bianco\\pubblicazioni\\InProgress\\iccad_2024\\supplementary_material\\code')}
proj.pyexec = {None: ('custom',
                      'c:\\Program Files\\Python\\venvs\\3-10-4\\Scripts\\python.exe')}
proj.pypath = {None: ('custom',
                      ['g:\\Data\\Disk_C\\Utenti\\Francesco\\Pac_F_Bianco\\pubblicazioni\\InProgress\\iccad_2024\\supplementary_material\\code'])}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
testing.stored-results = (1,
                          [],
                          {})
